buildscript {
	ext {
		kotlinVersion = '1.2.51'
		springBootVersion = '2.0.4.RELEASE'
	}
	repositories {
        jcenter()
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
		classpath('nu.studer:gradle-jooq-plugin:3.0.2')
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'nu.studer.jooq'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

repositories {
	mavenCentral()
}

sourceSets {
	main.kotlin.srcDirs += 'src/main/kotlin'
	main.kotlin.srcDirs += 'src/main/jooq-generate'
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-jooq')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('com.fasterxml.jackson.module:jackson-module-kotlin')
	compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	compile("org.jetbrains.kotlin:kotlin-reflect")
	runtime('com.h2database:h2')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	jooqRuntime('com.h2database:h2')
}

jooq {
	version = '3.11.2'
	edition = 'OSS'
	orm(sourceSets.main) {
		jdbc {
			driver = 'org.h2.Driver'
			url = 'jdbc:h2:~/orm;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=TRUE;MODE=MYSQL;DATABASE_TO_UPPER=false'
			user = 'sa'
			password = ''
		}
		generator {
			name = 'org.jooq.codegen.DefaultGenerator'
			database {
				name = 'org.jooq.meta.h2.H2Database'
				inputSchema = 'public'
				outputSchema = 'PUBLIC'
				includes = '.*'
				excludes = ''
			}
			target {
				packageName = 'orm.jooq'
				directory = 'src/main/jooq-generate/'
			}
		}
	}
}

